@charset "UTF-8";
/*$blue-dark: #455a64; // темно-синий, часто используется*/
/*$font-family-alt: 'DINPro', 'PT Sans Narrow', sans-serif;*/
/*$font-family-alt-bold: 'DINPro Bold', 'DINPro', 'PT Sans Narrow', sans-serif;*/
/* after для скроллбаров */
.tabs {
  margin-bottom: 20px;
  border: 1px solid #ff9d00;
  border-radius: 5px;
  overflow: hidden; }
  .tabs .tabs__list {
    list-style-type: none;
    padding-left: 0;
    display: flex;
    flex-wrap: wrap;
    font-size: 0;
    margin-bottom: -2px;
    margin-right: -2px; }
    .tabs .tabs__list li {
      flex: 1; }
      .tabs .tabs__list li a, .tabs .tabs__list li span {
        color: #131313;
        display: block;
        border-right: 1px solid #ff9d00;
        border-bottom: 1px solid #ff9d00;
        /*                font-size: 14px;
                                line-height: 32px;*/
        font-size: 15px;
        line-height: 48px;
        padding: 0 20px;
        text-align: center;
        white-space: nowrap;
        transition: background-color .2s ease-in-out, color .2s ease-in-out; }
        .tabs .tabs__list li a:after, .tabs .tabs__list li span:after {
          content: none; }
        .tabs .tabs__list li a [class^="icon-"], .tabs .tabs__list li span [class^="icon-"] {
          color: #3863c5; }
        .tabs .tabs__list li a:hover, .tabs .tabs__list li span:hover {
          color: #3863c5; }
        .tabs .tabs__list li a.active, .tabs .tabs__list li a:hover, .tabs .tabs__list li span.active, .tabs .tabs__list li span:hover {
          background-color: #ff9d00;
          color: #fff !important; }
        .tabs .tabs__list li a.disabled, .tabs .tabs__list li span.disabled {
          background-color: #e5e4e4;
          pointer-events: none; }
  .tabs._primary {
    border-color: #3863c5; }
    .tabs._primary .tabs__list li a, .tabs._primary .tabs__list li span {
      border-color: #3863c5; }
      .tabs._primary .tabs__list li a.active, .tabs._primary .tabs__list li a:hover, .tabs._primary .tabs__list li span.active, .tabs._primary .tabs__list li span:hover {
        background-color: #3863c5; }

@media (min-width: 320px) and (max-width: 767.98px) {
  .tabs:not(._noselect) {
    border: none; }
    .tabs:not(._noselect) .tabs__list {
      display: none; } }

@media (min-width: 768px) {
  .tabs {
    margin-bottom: 30px;
    display: inline-block; }
    .tabs._w100 {
      display: block; }
    .tabs .tabs__list li a, .tabs .tabs__list li span {
      font-size: 15px;
      line-height: 48px;
      padding: 0 25px; }
    .tabs .tabs__select {
      display: none; } }

@media (min-width: 1280px) {
  .tabs {
    margin-bottom: 40px; } }

.tabs-vert .tabs-vert__list {
  list-style-type: none;
  padding-left: 0;
  margin: 0; }
  @media (min-width: 320px) and (max-width: 767.98px) {
    .tabs-vert .tabs-vert__list {
      display: none; } }
  .tabs-vert .tabs-vert__list li {
    margin-bottom: 5px; }
    .tabs-vert .tabs-vert__list li > a, .tabs-vert .tabs-vert__list li > span {
      display: flex;
      align-items: center;
      min-height: 65px;
      padding: 10px 18px;
      background-color: rgba(255, 255, 255, 0.7);
      opacity: 0.7;
      border-radius: 2.9px;
      opacity: 0.7;
      font-size: 16px;
      color: #131313;
      transition: all 0.2s ease-in-out; }
      .tabs-vert .tabs-vert__list li > a:after, .tabs-vert .tabs-vert__list li > span:after {
        content: none; }
      .tabs-vert .tabs-vert__list li > a.active, .tabs-vert .tabs-vert__list li > span.active {
        opacity: 1;
        box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.12); }
  .tabs-vert .tabs-vert__list .tabs-vert__list__realty {
    min-height: 90px; }
    .tabs-vert .tabs-vert__list .tabs-vert__list__realty__img {
      position: relative;
      overflow: hidden;
      width: 90px;
      flex-shrink: 0;
      align-self: normal;
      margin: -10px 18px -10px -18px; }
      .tabs-vert .tabs-vert__list .tabs-vert__list__realty__img img {
        position: absolute;
        min-width: 100%;
        height: 100%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); }

@media (min-width: 768px) {
  .tabs-vert .tabs__select {
    display: none; } }

.sales-list .sales-list__item {
  font-size: 16px;
  line-height: 1.38;
  margin-bottom: 40px; }
  .sales-list .sales-list__item .sales-list__item__h {
    font-size: 21px;
    line-height: 1.24;
    display: flex;
    /*align-items: center;*/
    margin-bottom: 18px; }
    .sales-list .sales-list__item .sales-list__item__h .sales-list__item__h__icon {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      width: 77px;
      height: 77px;
      background-color: #ff9d00;
      border-radius: 50%;
      margin-right: 20px; }
    .sales-list .sales-list__item .sales-list__item__h .sales-list__item__h__inner {
      display: block; }
  .sales-list .sales-list__item .sales-list__item__p {
    margin-bottom: 20px; }
  .sales-list .sales-list__item._seller .sales-list__item__h {
    font-size: 18px;
    line-height: 1.28;
    flex-wrap: wrap;
    margin-bottom: 0; }
    .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon {
      background-color: #7f7fc7;
      background-image: linear-gradient(322deg, #7f7fc7, #494995);
      width: 69px;
      height: 69px;
      margin-right: 15px; }
      .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon .sprite {
        transform: scale(0.9); }
    .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__inner {
      flex-basis: 196px;
      flex-grow: 1; }
    .sales-list .sales-list__item._seller .sales-list__item__h .btn {
      flex-basis: 100%;
      margin-top: 10px; }

.sales-list._small-text .sales-list__item {
  font-size: 15px; }
  .sales-list._small-text .sales-list__item .sales-list__item__h {
    font-size: 19px; }

@media (min-width: 768px) {
  .sales-list {
    margin-bottom: -50px;
    display: flex;
    flex-wrap: wrap;
    margin-left: -25px;
    margin-right: -25px; }
    .sales-list .sales-list__item {
      flex: 0 0 50%;
      width: 50%;
      padding-right: 25px;
      padding-left: 25px;
      display: flex;
      flex-direction: column; }
      .sales-list .sales-list__item .sales-list__item__p {
        flex: 1; }
      .sales-list .sales-list__item .btn {
        display: inline-block;
        width: auto;
        align-self: flex-start; }
      .sales-list .sales-list__item._seller .sales-list__item__h {
        font-size: 21px; }
        .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon {
          width: 71px;
          height: 71px;
          margin-right: 20px; }
          .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon .sprite {
            transform: none; }
        .sales-list .sales-list__item._seller .sales-list__item__h .btn {
          flex-basis: auto;
          margin-left: 91px;
          margin-top: 0; }
    .sales-list._3 .sales-list__item:last-of-type {
      flex-basis: 60%; } }

@media (min-width: 1280px) {
  .sales-list._3 {
    display: flex;
    flex-wrap: wrap;
    margin-left: -35px;
    margin-right: -35px; }
    .sales-list._3 .sales-list__item, .sales-list._3 .sales-list__item:last-of-type {
      flex: 0 0 33.33%;
      width: 33.33%;
      padding-right: 35px;
      padding-left: 35px; }
  .sales-list._4 .sales-list__item {
    flex: 0 0 25%;
    width: 25%;
    padding-right: 25px;
    padding-left: 25px; }
  .sales-list .sales-list__item._seller .sales-list__item__h {
    padding-right: 70px;
    flex-wrap: nowrap; }
    .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__inner {
      flex: 1;
      min-width: 190px; }
    .sales-list .sales-list__item._seller .sales-list__item__h .btn {
      flex: 1;
      margin-left: 20px;
      align-self: unset; } }

.news-list {
  margin-left: -20px;
  margin-right: -20px; }
  @media (min-width: 768px) {
    .news-list {
      display: flex;
      flex-wrap: wrap;
      margin-left: -13px;
      margin-right: -13px; } }
  .news-list .news-item {
    margin-bottom: 20px; }
    @media (min-width: 768px) {
      .news-list .news-item {
        flex: 0 0 50%;
        width: 50%;
        padding-right: 13px;
        padding-left: 13px;
        margin-bottom: 26px; } }
    @media (min-width: 1280px) {
      .news-list .news-item {
        flex: 0 0 33.33%;
        width: 33.33%;
        padding-right: 13px;
        padding-left: 13px; } }

.news-related-list {
  position: relative;
  margin-bottom: 70px; }
  @media (min-width: 768px) and (max-width: 1279.98px) {
    .news-related-list {
      display: flex;
      flex-wrap: wrap;
      margin-left: -14px;
      margin-right: -14px;
      flex-wrap: nowrap; }
      .news-related-list:after {
        content: '';
        display: block;
        width: 16px;
        flex-shrink: 0; } }
  @media (min-width: 768px) {
    .news-related-list {
      margin-bottom: 40px; } }
  .news-related-list .news-item {
    border-radius: 4px; }
    @media (min-width: 768px) and (max-width: 1279.98px) {
      .news-related-list .news-item {
        flex: 0 0 382px;
        width: 382px;
        padding-right: 14px;
        padding-left: 14px; } }

.news-item {
  display: flex !important; }
  .news-item .news-item__inner {
    position: relative;
    overflow: hidden;
    background-color: #fff;
    padding: 20px;
    min-height: 245px;
    display: flex;
    flex-direction: column;
    width: 100%; }
    @media (min-width: 768px) {
      .news-item .news-item__inner {
        padding: 30px;
        border-radius: 4px;
        min-height: 265px; } }
  .news-item .news-item__h {
    font-size: 19px;
    font-weight: normal;
    margin-bottom: 24px; }
  .news-item .news-item__intro {
    font-size: 14px;
    margin-bottom: 24px;
    flex: 1; }
  .news-item .news-item__footer {
    display: flex;
    justify-content: space-between;
    align-items: flex-end; }
  .news-item .news-item__btn {
    width: 116px; }
    .news-item .news-item__btn._services {
      width: 155px; }
  .news-item .news-item__date {
    color: rgba(19, 19, 19, 0.5);
    font-size: 15px; }
    .news-item .news-item__date [class^="icon-"] {
      font-size: 14px;
      color: #7e7e7e;
      vertical-align: baseline; }
  .news-item .news-item__img-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    z-index: -1; }
    .news-item .news-item__img-wrapper:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #000;
      opacity: 0.65; }
  .news-item .news-item__img {
    position: absolute;
    min-width: 100%;
    min-height: 100%;
    max-width: none;
    max-height: none;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }
  .news-item._img .news-item__inner {
    color: #fff;
    background-color: transparent; }
  .news-item._img .news-item__btn {
    color: #fff; }
  .news-item._img .news-item__date {
    color: #fff; }
    .news-item._img .news-item__date [class^="icon-"] {
      color: #fff; }

.rte h2 {
  font-size: 19px;
  font-weight: 300;
  margin-bottom: 15px; }

.rte h3 {
  font-size: 19px;
  font-weight: 300;
  margin-bottom: 15px;
  margin-top: 30px;
  clear: both; }
  .rte h3:first-child {
    margin-top: 0; }

.rte h5 {
  font-size: 16px;
  margin-bottom: 20px;
  line-height: 1.63;
  font-weight: normal; }

.rte p, .rte ol, .rte ul {
  font-size: 14px;
  margin-bottom: 20px;
  line-height: 1.29; }

.rte a:after {
  content: none !important; }

.rte ul {
  list-style-type: none;
  padding-left: 0; }
  .rte ul li {
    position: relative;
    padding-left: 25px;
    margin-bottom: 15px; }
    .rte ul li:last-of-type {
      margin-bottom: 0; }
    .rte ul li:before {
      position: absolute;
      left: 0;
      top: -1px;
      content: '•'; }
    .rte ul li ul {
      margin-top: 10px; }
      .rte ul li ul li {
        margin-bottom: 10px; }

.rte ol {
  list-style-type: none;
  padding-left: 0;
  counter-reset: section; }
  .rte ol li {
    position: relative;
    padding-left: 25px;
    margin-bottom: 15px; }
    .rte ol li:last-of-type {
      margin-bottom: 0; }
    .rte ol li:before {
      counter-increment: section;
      content: counters(section, ".") ".";
      position: absolute;
      left: 0; }

.rte img {
  display: block;
  width: 100%; }

.rte blockquote {
  font-size: 18px;
  font-weight: 300;
  line-height: 1.33;
  margin-top: 30px;
  margin-left: -20px;
  margin-right: -20px;
  margin-bottom: 30px;
  background-color: #fff;
  padding: 20px; }
  .rte blockquote:before {
    content: '';
    width: 28px;
    height: 15px;
    background-size: 28px 15px;
    background-image: url(img/blockquote.svg);
    background-repeat: no-repeat;
    float: right; }

.rte .rte__img {
  margin-left: -20px;
  margin-right: -20px; }

.rte .rte__gallery, .rte .rte__video {
  margin-left: -20px;
  margin-right: -20px;
  margin-top: 30px;
  margin-bottom: 30px;
  width: auto; }

.rte .rte__table-wrapper {
  margin-left: -20px;
  margin-right: -20px;
  margin-bottom: 20px;
  overflow-y: scroll; }

.rte table {
  font-size: 14px;
  width: 100%; }
  .rte table tbody tr:nth-child(odd) {
    background-color: #e5e5e5; }
  .rte table td, .rte table th {
    font-weight: normal;
    padding-left: 20px;
    padding-right: 0;
    /*vertical-align: top;*/ }
    .rte table td:last-of-type, .rte table th:last-of-type {
      padding-right: 20px; }
  .rte table th {
    padding-top: 11px;
    padding-bottom: 11px; }
  .rte table td {
    padding-top: 20px;
    padding-bottom: 20px; }

.rte :last-child {
  margin-bottom: 0; }

@media (min-width: 768px) {
  .rte h2 {
    font-size: 28px;
    line-height: 1.61; }
  .rte h3 {
    font-size: 24px;
    line-height: 1.42; }
  .rte h5 {
    font-size: 18px;
    line-height: 1.44; }
  .rte p, .rte ol, .rte ul {
    font-size: 15px;
    /*margin-bottom: 30px;*/
    line-height: 1.33; }
  .rte blockquote {
    font-size: 25px;
    line-height: 1.28;
    margin-left: -30px;
    margin-right: -30px;
    padding: 30px; }
    .rte blockquote:before {
      content: '';
      width: 58px;
      height: 31px;
      background-size: 58px 31px; }
  .rte .rte__img {
    margin-left: 0;
    margin-right: 0;
    max-width: 300px;
    padding-top: 3px;
    margin-bottom: 20px; }
    .rte .rte__img._left {
      float: left;
      margin-right: 20px; }
    .rte .rte__img._right {
      float: right;
      margin-left: 20px; }
  .rte .rte__gallery, .rte .rte__video {
    margin-left: 0;
    margin-right: 0;
    margin-top: 50px;
    margin-bottom: 50px; }
  .rte .rte__table-wrapper {
    margin-left: 0;
    margin-right: 0;
    margin-bottom: 30px; }
  .rte table {
    font-size: 15px; }
    .rte table td, .rte table th {
      padding-left: 25px; }
      .rte table td:last-of-type, .rte table th:last-of-type {
        padding-right: 25px; }
    .rte table th {
      padding-top: 22px;
      padding-bottom: 22px; }
    .rte table td {
      padding-top: 30px;
      padding-bottom: 30px; } }

@media (min-width: 1280px) {
  .rte h2 {
    font-size: 35px;
    line-height: 1.29;
    margin-bottom: 30px; }
  .rte h3 {
    font-size: 32px;
    line-height: 1.06;
    margin-bottom: 30px; }
  .rte blockquote {
    font-size: 28px;
    line-height: 1.21;
    margin-left: 0;
    margin-right: 0;
    margin-top: 50px;
    margin-bottom: 50px;
    padding: 40px;
    border-radius: 4px; }
  .rte .rte__img {
    max-width: 843px;
    margin-bottom: 30px; }
    .rte .rte__img._left {
      margin-right: 30px; }
    .rte .rte__img._right {
      margin-left: 30px; } }

@media (min-width: 768px) {
  .about-why {
    display: flex; } }

.about-why .about-why__aside {
  margin-bottom: 26px; }
  @media (min-width: 768px) {
    .about-why .about-why__aside {
      margin-bottom: 0;
      margin-right: 30px;
      flex-basis: 200px;
      flex-shrink: 0; } }
  @media (min-width: 1280px) {
    .about-why .about-why__aside {
      flex-basis: 280px; } }

.about-hystory::after {
  display: block;
  clear: both;
  content: ""; }

.about-hystory .about-hystory__aside {
  margin-bottom: 26px; }
  @media (min-width: 768px) {
    .about-hystory .about-hystory__aside {
      margin-bottom: 0;
      width: 200px;
      float: left; } }
  @media (min-width: 1280px) {
    .about-hystory .about-hystory__aside {
      width: 280px; } }

.about-hystory .about-hystory__content {
  flex: 1; }
  @media (min-width: 768px) {
    .about-hystory .about-hystory__content {
      padding-left: 230px; } }
  @media (min-width: 1280px) {
    .about-hystory .about-hystory__content {
      padding-left: 310px;
      padding-top: 45px; } }

.about-hystory .about-hystory__year-slider {
  margin-bottom: 0;
  position: relative;
  height: 250px;
  overflow: hidden;
  border-radius: 3px; }
  @media (min-width: 768px) {
    .about-hystory .about-hystory__year-slider {
      height: 320px; } }
  .about-hystory .about-hystory__year-slider span {
    display: block;
    background-color: #fff;
    font-size: 17px;
    font-weight: 300;
    line-height: 48px;
    text-align: center;
    border-top: 1px solid #fff;
    border-bottom: 1px solid #fff;
    border-right: none;
    border-left: none;
    cursor: pointer;
    transition: all 0.2s ease-in-out; }
    @media (min-width: 768px) {
      .about-hystory .about-hystory__year-slider span {
        font-size: 19px;
        line-height: 58px; } }
    .about-hystory .about-hystory__year-slider span._sibling {
      font-size: 22px; }
      @media (min-width: 768px) {
        .about-hystory .about-hystory__year-slider span._sibling {
          font-size: 26px; } }
    .about-hystory .about-hystory__year-slider span.slick-current {
      font-size: 29px;
      font-weight: normal;
      border-top-color: rgba(0, 0, 0, 0.2);
      border-bottom-color: rgba(0, 0, 0, 0.2); }
      @media (min-width: 768px) {
        .about-hystory .about-hystory__year-slider span.slick-current {
          font-size: 32px; } }
  .about-hystory .about-hystory__year-slider:before, .about-hystory .about-hystory__year-slider:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 70px;
    left: 0;
    z-index: 1; }
  .about-hystory .about-hystory__year-slider:before {
    top: 0;
    background: linear-gradient(to bottom, #fff, transparent); }
  .about-hystory .about-hystory__year-slider:after {
    bottom: 0;
    background: linear-gradient(to top, #fff, transparent); }

.about-hystory .about-hystory__content__item {
  display: flex; }
  .about-hystory .about-hystory__content__item .about-hystory__content__item__img {
    display: none; }
    @media (min-width: 1280px) {
      .about-hystory .about-hystory__content__item .about-hystory__content__item__img {
        display: block;
        width: 227px;
        margin-right: 32px;
        flex-shrink: 0; }
        .about-hystory .about-hystory__content__item .about-hystory__content__item__img img {
          display: block;
          max-width: 100%;
          border-radius: 4px; } }
  .about-hystory .about-hystory__content__item .about-hystory__content__item__h {
    font-size: 19px;
    font-weight: 300;
    margin-bottom: 11px; }
    @media (min-width: 768px) {
      .about-hystory .about-hystory__content__item .about-hystory__content__item__h {
        font-size: 32px;
        margin-bottom: 12px; } }
  .about-hystory .about-hystory__content__item .about-hystory__content__item__year {
    font-size: 15px;
    opacity: 0.5;
    margin-bottom: 19px; }
    @media (min-width: 768px) {
      .about-hystory .about-hystory__content__item .about-hystory__content__item__year {
        font-size: 18px;
        margin-bottom: 27px; } }
  .about-hystory .about-hystory__content__item .about-hystory__content__item__text {
    font-size: 14px;
    margin-bottom: 0; }
    @media (min-width: 768px) {
      .about-hystory .about-hystory__content__item .about-hystory__content__item__text {
        font-size: 15px; } }

.about-dir {
  color: #fff;
  background-image: linear-gradient(162deg, #16222a, #3a6073);
  overflow: hidden; }
  @media (min-width: 768px) {
    .about-dir {
      background-image: linear-gradient(139deg, #16222a, #3a6073); } }
  @media (min-width: 1280px) {
    .about-dir {
      background-image: linear-gradient(105deg, #16222a, #3a6073); } }
  .about-dir .container {
    position: relative;
    padding-top: 20px;
    padding-bottom: 260px; }
    @media (min-width: 768px) {
      .about-dir .container {
        padding-top: 30px;
        padding-bottom: 30px;
        min-height: 880px; } }
    @media (min-width: 1280px) {
      .about-dir .container {
        min-height: 500px; } }
  .about-dir .about-dir__h {
    font-size: 22px;
    font-weight: 300;
    margin-bottom: 23px; }
    @media (min-width: 768px) {
      .about-dir .about-dir__h {
        font-size: 35px;
        margin-bottom: 34px; } }
    @media (min-width: 1280px) {
      .about-dir .about-dir__h {
        font-size: 45px;
        margin-bottom: 40px; } }
  .about-dir .about-dir__text {
    margin-bottom: 38px; }
    @media (min-width: 768px) {
      .about-dir .about-dir__text {
        width: 483px;
        margin-bottom: 185px; } }
    @media (min-width: 1280px) {
      .about-dir .about-dir__text {
        width: 650px;
        margin-bottom: 0; } }
    .about-dir .about-dir__text p {
      margin-bottom: 20px; }
      .about-dir .about-dir__text p:last-of-type {
        margin-bottom: 0; }
      @media (min-width: 768px) {
        .about-dir .about-dir__text p {
          font-size: 18px;
          line-height: 1.44; } }
  @media (min-width: 768px) {
    .about-dir .about-dir__subscribe {
      margin-left: 230px; } }
  @media (min-width: 1280px) {
    .about-dir .about-dir__subscribe {
      margin-left: 0;
      position: absolute;
      bottom: 30px;
      left: 750px; } }
  .about-dir .about-dir__subscribe .about-dir__subscribe__name {
    font-size: 18px;
    margin-bottom: 5px; }
  .about-dir .about-dir__subscribe .about-dir__subscribe__post {
    opacity: 0.5;
    font-size: 12px;
    margin-bottom: 8px; }
  .about-dir .about-dir__subscribe .about-dir__subscribe__img {
    display: block;
    margin-left: 30px; }
  .about-dir .about-dir__boss {
    position: absolute;
    right: 0;
    bottom: 0;
    height: 287px; }
    @media (min-width: 768px) {
      .about-dir .about-dir__boss {
        right: -20px;
        height: 440px; } }
    @media (min-width: 1280px) {
      .about-dir .about-dir__boss {
        right: 0; } }
    .about-dir .about-dir__boss img {
      display: block;
      height: 100%; }

.reviews .reviews__list {
  margin-left: -20px;
  margin-right: -20px; }
  .reviews .reviews__list .slick-dots {
    margin-bottom: 30px;
    margin-left: auto;
    margin-right: auto; }
  .reviews .reviews__list .reviews__list__item {
    height: auto;
    margin-bottom: 30px; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__inner {
      padding: 20px;
      background-color: #fff; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__content {
      margin-bottom: 26px; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__header {
      margin-bottom: 25px; }
      .reviews .reviews__list .reviews__list__item .reviews__list__item__header::after {
        display: block;
        clear: both;
        content: ""; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__img-wrapper {
      width: 82px;
      margin-right: 18px;
      float: left; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__img {
      border-radius: 50%;
      width: 100%; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__title {
      font-size: 18px;
      margin-bottom: 7px; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__subtitle {
      font-size: 14px;
      margin-bottom: 23px; }
      .reviews .reviews__list .reviews__list__item .reviews__list__item__subtitle span {
        display: block; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__agent {
      font-size: 12px;
      color: #6d6d6d; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__date {
      font-size: 0; }
      .reviews .reviews__list .reviews__list__item .reviews__list__item__date .reviews__list__item__date__icon {
        color: #7e7e7e;
        margin-right: 9px;
        font-size: 14px;
        top: -1px;
        position: relative; }
      .reviews .reviews__list .reviews__list__item .reviews__list__item__date .reviews__list__item__date__text {
        opacity: .5;
        font-size: 15px; }
  .reviews .reviews__list._big {
    display: none; }

@media (min-width: 768px) {
  .reviews .reviews__list {
    margin-left: 0;
    margin-right: 0; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__inner {
      border-radius: 4px;
      padding: 33px 40px 40px; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__content {
      margin-bottom: 32px; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__header {
      margin-bottom: 20px;
      display: flex; }
      .reviews .reviews__list .reviews__list__item .reviews__list__item__header .reviews__list__item__header__inner {
        display: flex;
        flex-direction: column;
        justify-content: center; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__img-wrapper {
      width: 103px;
      margin-right: 27px;
      float: none; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__title {
      font-size: 24px;
      margin-bottom: 17px; }
    .reviews .reviews__list .reviews__list__item .reviews__list__item__subtitle {
      font-size: 14px;
      margin-bottom: 8px; }
      .reviews .reviews__list .reviews__list__item .reviews__list__item__subtitle span {
        display: inline; } }

@media (min-width: 1280px) {
  .reviews .reviews__list .slick-dots {
    margin-bottom: 40px; }
  .reviews .reviews__list .reviews__list__item {
    margin-bottom: 40px; }
  .reviews .reviews__list:not(._big) {
    display: flex;
    flex-wrap: wrap;
    margin-left: -14.5px;
    margin-right: -14.5px;
    /*margin-top: -10px;*/ }
    .reviews .reviews__list:not(._big) .reviews__list__item {
      margin-top: 10px;
      flex: 0 0 33.33%;
      width: 33.33%;
      padding-right: 14.5px;
      padding-left: 14.5px; }
      .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__inner {
        cursor: pointer;
        height: 272px;
        overflow: hidden;
        position: relative;
        position: relative;
        top: 0;
        box-shadow: 0 20px 30px 0 rgba(0, 0, 0, 0);
        transition: all 0.2s ease-in-out; }
        .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__inner:hover {
          top: -10px;
          box-shadow: 0 20px 30px 0 rgba(0, 0, 0, 0.12); }
        .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__inner:after {
          content: '';
          position: absolute;
          left: 0;
          right: 0;
          bottom: 0;
          height: 125px;
          background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #fff, #fff); }
      .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__inner {
        border-radius: 5px;
        padding: 21px 26px; }
      .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__header {
        margin-bottom: 24px; }
      .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__img-wrapper {
        width: 76px;
        margin-right: 23px; }
      .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__title {
        font-size: 18px;
        margin-bottom: 7px; }
      .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__subtitle {
        display: none; }
      .reviews .reviews__list:not(._big) .reviews__list__item .reviews__list__item__date {
        position: absolute;
        left: 26px;
        bottom: 23px;
        z-index: 1; }
  .reviews .reviews__list._big {
    display: block;
    transition: height 0.4s ease-in-out;
    /*height: 0;*/ }
    .reviews .reviews__list._big .reviews__list__item .reviews__list__item__inner {
      /*margin-bottom: 50px;*/
      background-image: linear-gradient(to left, rgba(255, 255, 255, 0), #fff); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
