@charset "UTF-8";
/*$blue-dark: #455a64; // темно-синий, часто используется*/
/*$font-family-alt: 'DINPro', 'PT Sans Narrow', sans-serif;*/
/*$font-family-alt-bold: 'DINPro Bold', 'DINPro', 'PT Sans Narrow', sans-serif;*/
/* after для скроллбаров */
.agent .agent__inner {
  display: flex;
  flex-direction: column;
  text-align: center;
  font-size: 14px; }
  .agent .agent__inner :last-child {
    margin-bottom: 0; }

.agent .agent__img {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 113px;
  border-radius: 50%;
  margin-bottom: 15px; }

.agent .agent__name {
  color: #2e2e2e;
  margin-bottom: 10px;
  font-size: 18px; }

.agent .agent__post {
  opacity: 0.5;
  font-size: 12px;
  color: #2e2e2e;
  margin-bottom: 15px; }

.agent .agent__phone {
  opacity: 0.9;
  white-space: nowrap;
  margin-bottom: 10px; }

.agent .agent__link {
  opacity: 0.9;
  white-space: nowrap;
  margin-bottom: 20px; }
  .agent .agent__link a:after {
    content: none !important; }

.agent .agent__more {
  margin-top: 25px;
  flex-grow: 1;
  display: flex;
  align-items: flex-end; }
  .agent .agent__more .btn {
    padding: 0 15px; }

.agents {
  margin-top: -20px;
  /*    .list-header {
        .list-header__sorting {
            flex-basis: auto;
        }
    }*/ }
  @media (min-width: 768px) {
    .agents {
      margin-top: 0; } }
  .agents .agents__muted {
    opacity: 0.5;
    font-size: 15px;
    line-height: 1.73; }
    @media (min-width: 768px) {
      .agents .agents__muted {
        font-size: 18px;
        line-height: 1.44; } }

.agents-list-wrapper {
  margin-bottom: 45px; }
  @media (min-width: 768px) {
    .agents-list-wrapper {
      margin-bottom: 10px; } }
  @media (min-width: 1280px) {
    .agents-list-wrapper {
      margin-bottom: 30px; } }
  .agents-list-wrapper .agents-list-wrapper__h {
    display: none; }
    @media (min-width: 1280px) {
      .agents-list-wrapper .agents-list-wrapper__h {
        display: block;
        margin-bottom: 30px; } }
  @media (min-width: 1280px) {
    .agents-list-wrapper .agents-list-wrapper__row {
      display: flex; } }
  @media (min-width: 1280px) {
    .agents-list-wrapper .agents-list-wrapper__row .agents-list {
      margin-right: 28px;
      flex-grow: 1; } }
  .agents-list-wrapper .agents-list-wrapper__row .agents-list-aside {
    display: none; }
    @media (min-width: 1280px) {
      .agents-list-wrapper .agents-list-wrapper__row .agents-list-aside {
        display: block;
        flex-basis: 279px;
        flex-shrink: 0; } }

@media (min-width: 768px) {
  .agents-list .agents-list__inner {
    display: flex;
    flex-wrap: wrap;
    margin-left: -13px;
    margin-right: -13px; } }

.agents-list .agent, .agents-list .agents-promo-work, .agents-list .agents-promo-form {
  display: flex;
  margin-bottom: 20px; }
  @media (min-width: 768px) {
    .agents-list .agent, .agents-list .agents-promo-work, .agents-list .agents-promo-form {
      flex: 0 0 50%;
      width: 50%;
      padding-right: 13px;
      padding-left: 13px;
      margin-bottom: 26px; } }
  @media (min-width: 1280px) {
    .agents-list .agent, .agents-list .agents-promo-work, .agents-list .agents-promo-form {
      flex: 0 0 33.33%;
      width: 33.33%;
      padding-right: 13px;
      padding-left: 13px; } }

.agents-list .agent .agent__inner {
  min-height: 425px;
  background-color: #fff;
  border-radius: 4px;
  padding: 27px 29px;
  flex: 1; }

@media (min-width: 1280px) {
  .agents-list .agents-promo-work, .agents-list .agents-promo-form {
    display: none; } }

.agents-list-aside {
  display: none; }
  @media (min-width: 1280px) {
    .agents-list-aside {
      display: block;
      flex-basis: 279px;
      flex-shrink: 0; }
      .agents-list-aside > * {
        margin-bottom: 26px; }
        .agents-list-aside > *:last-of-type {
          margin-bottom: 0; } }

.agents-promo-work .agents-promo-work__inner {
  border-radius: 4px;
  background-image: linear-gradient(148deg, #16222a, #3a6073);
  padding: 20px;
  display: flex;
  width: 100%;
  min-height: 425px;
  position: relative; }

.agents-promo-work .agents-promo-work__content {
  display: flex;
  flex-direction: column;
  flex: 1;
  z-index: 2; }

.agents-promo-work .agents-promo-work__h {
  font-size: 32px;
  font-weight: 300;
  line-height: 1.06;
  color: #fff;
  margin-bottom: 22px;
  width: 190px; }

.agents-promo-work .agents-promo-work__p {
  opacity: 0.5;
  font-size: 16px;
  color: #fff;
  margin-bottom: 22px;
  flex: 1; }

.agents-promo-work .agents-promo-work__img {
  position: absolute;
  right: 0;
  bottom: 31px;
  z-index: 1; }

.agents-promo-form .agents-promo-form__inner {
  border-radius: 4px;
  background-image: linear-gradient(154deg, #7f7fc7, #494995);
  padding: 20px;
  display: flex;
  flex-direction: column;
  width: 100%;
  min-height: 425px;
  position: relative; }

.agents-promo-form .agents-promo-form__content {
  flex: 1; }

.agents-promo-form .agents-promo-form__h {
  font-size: 20px;
  font-weight: normal;
  color: #fff;
  margin-bottom: 15px; }

.agents-promo-form .agents-promo-form__p {
  opacity: 0.5;
  font-size: 14px;
  color: #fff;
  margin-bottom: 15px; }

.agents-filter {
  margin-bottom: 35px; }
  @media (min-width: 768px) {
    .agents-filter {
      margin-bottom: 30px; } }
  @media (min-width: 1280px) {
    .agents-filter {
      display: flex;
      flex-wrap: wrap; } }
  .agents-filter .agents-filter__item {
    margin-bottom: 20px; }
    .agents-filter .agents-filter__item:last-of-type {
      margin-bottom: 0; }
    @media (min-width: 768px) and (max-width: 1279.98px) {
      .agents-filter .agents-filter__item {
        margin-bottom: 38px; } }
  .agents-filter .agents-filter__search .input-wrapper._icon [class^="icon-"] {
    color: #131313; }
  @media (min-width: 1280px) {
    .agents-filter .agents-filter__search {
      flex: 1;
      margin-right: 68px; } }
  @media (min-width: 1280px) {
    .agents-filter .agents-filter__filter {
      flex-basis: 279px;
      flex-shrink: 0;
      margin-top: -50px; } }
  .agents-filter .agents-filter__abc {
    flex-basis: 100%; }
  @media (min-width: 768px) and (max-width: 1279.98px) {
    .agents-filter .agents-filter__checkbox-wrapper {
      columns: 2; } }
  .agents-filter .agents-filter__alphabet-wrapper {
    overflow-y: auto;
    margin-left: -20px;
    margin-right: -20px;
    padding-left: 20px; }
    .agents-filter .agents-filter__alphabet-wrapper .alphabet:after {
      content: '';
      display: inline-block;
      width: 20px; }
    @media (min-width: 768px) {
      .agents-filter .agents-filter__alphabet-wrapper {
        margin-left: -30px;
        margin-right: -30px;
        padding-left: 30px; }
        .agents-filter .agents-filter__alphabet-wrapper .alphabet:after {
          width: 30px; } }

.agent-header {
  margin-bottom: 55px; }
  .agent-header .agent-header__h {
    font-size: 22px;
    font-weight: 300;
    margin-bottom: 12px; }
    @media (min-width: 768px) {
      .agent-header .agent-header__h {
        font-size: 35px;
        line-height: 1.2; } }
    @media (min-width: 1280px) {
      .agent-header .agent-header__h {
        font-size: 40px;
        line-height: 1.25; } }
  .agent-header .agent-header__lead {
    opacity: 0.5;
    font-size: 16px;
    line-height: 1.63;
    margin-bottom: 0; }
    @media (min-width: 768px) {
      .agent-header .agent-header__lead {
        font-size: 21px;
        line-height: 1.24; } }
  .agent-header .agent-header__contacts {
    list-style-type: none;
    padding-left: 0;
    margin-bottom: 0;
    font-size: 18px;
    line-height: 1.44; }
    @media (min-width: 768px) {
      .agent-header .agent-header__contacts {
        font-size: 21px;
        line-height: 1.24; } }
    .agent-header .agent-header__contacts li {
      margin-bottom: 11px; }
      .agent-header .agent-header__contacts li:last-of-type {
        margin-bottom: 0; }
      @media (min-width: 768px) {
        .agent-header .agent-header__contacts li {
          display: inline-block;
          margin-right: 30px; }
          .agent-header .agent-header__contacts li:last-of-type {
            margin-right: 0; } }
  .agent-header .agent-header__phone {
    /*@include link-in-text;*/ }
    .agent-header .agent-header__phone [class^="icon-"] {
      font-size: 16px;
      /*margin-right: 9px;*/ }
  .agent-header .agent-header__img {
    display: block;
    border-radius: 50%;
    width: 116px; }
    @media (min-width: 768px) {
      .agent-header .agent-header__img {
        width: 159px; } }
  .agent-header::after {
    display: block;
    clear: both;
    content: ""; }
  @media (min-width: 768px) {
    .agent-header {
      margin-bottom: 35px; } }
  @media (min-width: 1280px) {
    .agent-header {
      margin-bottom: 50px; } }
  .agent-header .agent-header__img-wrapper {
    float: left;
    margin-right: 20px;
    margin-bottom: 20px; }
    @media (min-width: 768px) {
      .agent-header .agent-header__img-wrapper {
        margin-right: 40px;
        margin-bottom: 0; } }
  .agent-header .agent-header__head {
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 116px;
    margin-bottom: 7px; }
  @media (min-width: 320px) and (max-width: 767.98px) {
    .agent-header .agent-header__contacts {
      clear: left; } }

.agent-form {
  /*border-radius: $border-radius;*/
  background-image: linear-gradient(150deg, #7f7fc7, #494995);
  margin-left: -20px;
  margin-right: -20px;
  margin-bottom: 20px;
  padding: 20px; }
  @media (min-width: 320px) and (max-width: 767.98px) {
    .agent-form .input-group__wrapper._submit .input-group:last-of-type {
      margin-bottom: 0; } }
  @media (min-width: 768px) {
    .agent-form {
      background-image: linear-gradient(113deg, #7f7fc7, #494995);
      margin-left: -30px;
      margin-right: -30px;
      margin-bottom: 30px;
      padding: 25px 30px 20px; }
      .agent-form input {
        width: 310px; } }
  @media (min-width: 1280px) {
    .agent-form {
      background-image: linear-gradient(101deg, #7f7fc7, #494995);
      margin-left: 0;
      margin-right: 0;
      margin-bottom: 50;
      border-radius: 4px; }
      .agent-form .agent-form__form {
        display: flex;
        align-items: flex-end; }
      .agent-form .input-group__wrapper {
        margin-right: 20px; } }
  .agent-form .agent-form__h {
    font-size: 20px;
    font-weight: normal;
    color: #fff;
    margin-bottom: 25px; }

.realty-form {
  color: #fff; }
  .realty-form .realty-form__h {
    font-size: 22px;
    font-weight: 300;
    margin-bottom: 25px; }
  .realty-form .realty-form__lead {
    opacity: 0.7;
    font-size: 15px;
    font-weight: 500;
    margin-bottom: 25px; }
  .realty-form .realty-form__text {
    font-size: 14px;
    line-height: 1.29;
    margin-bottom: 34px; }
    .realty-form .realty-form__text p, .realty-form .realty-form__text ul {
      margin-bottom: 1rem; }
      .realty-form .realty-form__text p:last-child, .realty-form .realty-form__text ul:last-child {
        margin-bottom: 0; }
    .realty-form .realty-form__text a {
      color: #fff; }
      .realty-form .realty-form__text a:after {
        background: url(img/link-inverse.png) repeat-x; }
    .realty-form .realty-form__text ul {
      list-style-type: none;
      padding-left: 0;
      padding-left: 25px; }
      .realty-form .realty-form__text ul li {
        margin-bottom: 1rem;
        position: relative; }
        .realty-form .realty-form__text ul li:last-of-type {
          margin-bottom: 0; }
        .realty-form .realty-form__text ul li:before {
          content: '•';
          position: absolute;
          left: -25px;
          top: -1px; }
  .realty-form .realty-form__call .realty-form__call__text {
    display: block;
    font-size: 14px;
    color: #fff;
    margin-bottom: 10px; }
  .realty-form .realty-form__call .realty-form__call__phone {
    font-size: 26px;
    color: white; }
    .realty-form .realty-form__call .realty-form__call__phone:after {
      content: none !important; }
    .realty-form .realty-form__call .realty-form__call__phone .link {
      color: #fff; }
      .realty-form .realty-form__call .realty-form__call__phone .link:after {
        background: url(img/link-inverse.png) repeat-x; }
      .realty-form .realty-form__call .realty-form__call__phone .link:hover {
        opacity: .7; }
        .realty-form .realty-form__call .realty-form__call__phone .link:hover:after {
          opacity: .7; }
    .realty-form .realty-form__call .realty-form__call__phone [class^="icon-"] {
      font-size: 20px;
      margin-right: 10px; }
  .realty-form .realty-form__row {
    margin-bottom: 45px; }
    .realty-form .realty-form__row .realty-form__col._2 .realty-form__h {
      margin-bottom: 10px; }
  .realty-form._second {
    background-image: linear-gradient(21deg, #7faed8, #4585be); }
  .realty-form._rent {
    background-image: linear-gradient(23deg, #7faed8, #4585be); }
  .realty-form._commercial {
    background-image: linear-gradient(158deg, #16222a, #3a6073); }
  .realty-form._new {
    background-image: linear-gradient(22deg, #7faed8, #4585be); }
  .realty-form._seller {
    background-image: linear-gradient(341deg, #7f7fc7, #494995); }
  .realty-form._hypothec {
    background-image: linear-gradient(152deg, #41b765, #d7cc54);
    margin-top: -15px; }
    .realty-form._hypothec .realty-form__row, .realty-form._hypothec .btn {
      margin-bottom: 34px; }

@media (min-width: 768px) {
  .realty-form .realty-form__h {
    font-size: 35px;
    margin-bottom: 30px; }
  .realty-form .realty-form__lead {
    margin-bottom: 34px; }
  .realty-form .realty-form__text {
    font-size: 16px;
    line-height: normal;
    margin-bottom: 40px; }
  .realty-form .realty-form__call .realty-form__call__text {
    font-size: 15px; }
  .realty-form .input-group input {
    width: 300px; }
  .realty-form .realty-form__row {
    margin-bottom: 35px; }
  .realty-form._second {
    background-image: linear-gradient(52deg, #7faed8, #4585be); }
  .realty-form._rent {
    background-image: linear-gradient(51deg, #7faed8, #4585be); }
  .realty-form._commercial {
    background-image: linear-gradient(131deg, #16222a, #3a6073); }
  .realty-form._new {
    background-image: linear-gradient(49deg, #7faed8, #4585be); }
  .realty-form._seller {
    background-image: linear-gradient(315deg, #7f7fc7, #494995); }
  .realty-form._hypothec {
    background-image: linear-gradient(121deg, #41b765, #d7cc54);
    margin-top: -25px; }
    .realty-form._hypothec .realty-form__row {
      display: flex;
      align-items: center; }
    .realty-form._hypothec .btn {
      margin-bottom: 0;
      width: 225px;
      margin-right: 45px; } }

@media (min-width: 1280px) {
  .realty-form .realty-form__h {
    font-size: 45px;
    margin-bottom: 40px; }
  .realty-form .realty-form__text {
    padding-right: 60px;
    margin-bottom: 50px; }
  .realty-form .realty-form__row {
    margin-bottom: 0;
    display: flex; }
    .realty-form .realty-form__row .realty-form__col {
      flex: 1; }
  .realty-form .input-group__wrapper:last-of-type .input-group {
    margin-bottom: 0; }
  .realty-form._second {
    background-image: linear-gradient(77deg, #7faed8, #4585be); }
    .realty-form._second .realty-form__h {
      margin-bottom: 30px; }
  .realty-form._rent {
    background-image: linear-gradient(78deg, #7faed8, #4585be); }
  .realty-form._commercial {
    background-image: linear-gradient(101deg, #16222a, #3a6073); }
    .realty-form._commercial .realty-form__h {
      font-size: 35px; }
    .realty-form._commercial .realty-form__row .realty-form__col._2 .realty-form__h {
      font-size: 32px; }
  .realty-form._new {
    background-image: linear-gradient(78deg, #7faed8, #4585be); }
    .realty-form._new .realty-form__h {
      font-size: 35px; }
    .realty-form._new .realty-form__row .realty-form__col._2 .realty-form__h {
      font-size: 32px; }
  .realty-form._seller {
    background-image: linear-gradient(284deg, #7f7fc7, #494995); }
    .realty-form._seller .realty-form__h {
      font-size: 40px; }
    .realty-form._seller .realty-form__row .realty-form__col._2 .realty-form__h {
      font-size: 32px; }
  .realty-form._hypothec {
    background-image: linear-gradient(104deg, #41b765, #d7cc54);
    margin-top: -30px; }
    .realty-form._hypothec .realty-form__content {
      width: 735px; } }

.sales-list .sales-list__item {
  font-size: 16px;
  line-height: 1.38;
  margin-bottom: 40px; }
  .sales-list .sales-list__item .sales-list__item__h {
    font-size: 21px;
    line-height: 1.24;
    display: flex;
    /*align-items: center;*/
    margin-bottom: 18px; }
    .sales-list .sales-list__item .sales-list__item__h .sales-list__item__h__icon {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      width: 77px;
      height: 77px;
      background-color: #ff9d00;
      border-radius: 50%;
      margin-right: 20px; }
    .sales-list .sales-list__item .sales-list__item__h .sales-list__item__h__inner {
      display: block; }
  .sales-list .sales-list__item .sales-list__item__p {
    margin-bottom: 20px; }
  .sales-list .sales-list__item._seller .sales-list__item__h {
    font-size: 18px;
    line-height: 1.28;
    flex-wrap: wrap;
    margin-bottom: 0; }
    .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon {
      background-color: #7f7fc7;
      background-image: linear-gradient(322deg, #7f7fc7, #494995);
      width: 69px;
      height: 69px;
      margin-right: 15px; }
      .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon .sprite {
        transform: scale(0.9); }
    .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__inner {
      flex-basis: 196px;
      flex-grow: 1; }
    .sales-list .sales-list__item._seller .sales-list__item__h .btn {
      flex-basis: 100%;
      margin-top: 10px; }

.sales-list._small-text .sales-list__item {
  font-size: 15px; }
  .sales-list._small-text .sales-list__item .sales-list__item__h {
    font-size: 19px; }

@media (min-width: 768px) {
  .sales-list {
    margin-bottom: -50px;
    display: flex;
    flex-wrap: wrap;
    margin-left: -25px;
    margin-right: -25px; }
    .sales-list .sales-list__item {
      flex: 0 0 50%;
      width: 50%;
      padding-right: 25px;
      padding-left: 25px;
      display: flex;
      flex-direction: column; }
      .sales-list .sales-list__item .sales-list__item__p {
        flex: 1; }
      .sales-list .sales-list__item .btn {
        display: inline-block;
        width: auto;
        align-self: flex-start; }
      .sales-list .sales-list__item._seller .sales-list__item__h {
        font-size: 21px; }
        .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon {
          width: 71px;
          height: 71px;
          margin-right: 20px; }
          .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__icon .sprite {
            transform: none; }
        .sales-list .sales-list__item._seller .sales-list__item__h .btn {
          flex-basis: auto;
          margin-left: 91px;
          margin-top: 0; }
    .sales-list._3 .sales-list__item:last-of-type {
      flex-basis: 60%; } }

@media (min-width: 1280px) {
  .sales-list._3 {
    display: flex;
    flex-wrap: wrap;
    margin-left: -35px;
    margin-right: -35px; }
    .sales-list._3 .sales-list__item, .sales-list._3 .sales-list__item:last-of-type {
      flex: 0 0 33.33%;
      width: 33.33%;
      padding-right: 35px;
      padding-left: 35px; }
  .sales-list._4 .sales-list__item {
    flex: 0 0 25%;
    width: 25%;
    padding-right: 25px;
    padding-left: 25px; }
  .sales-list .sales-list__item._seller .sales-list__item__h {
    padding-right: 70px;
    flex-wrap: nowrap; }
    .sales-list .sales-list__item._seller .sales-list__item__h .sales-list__item__h__inner {
      flex: 1;
      min-width: 190px; }
    .sales-list .sales-list__item._seller .sales-list__item__h .btn {
      flex: 1;
      margin-left: 20px;
      align-self: unset; } }

.services .services__item {
  margin-bottom: 20px; }
  .services .services__item:last-of-type {
    margin-bottom: 0; }

.services .services__item__inner {
  border-radius: 5px;
  background-color: #fff;
  padding: 20px 20px 160px;
  position: relative;
  font-size: 14px;
  line-height: 1.29; }
  .services .services__item__inner .services__item__h {
    font-size: 18px;
    font-weight: normal;
    margin-bottom: 21px; }
  .services .services__item__inner .services__item__footer {
    margin-top: 25px; }
  .services .services__item__inner .services__item__img-wrapper {
    position: absolute;
    right: 0;
    bottom: 0;
    height: 150px; }
    .services .services__item__inner .services__item__img-wrapper img {
      height: 100%; }

/*@include media-breakpoint-only(sm) {
    .services {
        .services__item {
            &._seller {
                .services__item__inner {
                    margin-left: - $container-padding-sm;
                    margin-right: - $container-padding-sm;
                    border-radius: 0;
                }
            }
            &._1 {
                .services__item__inner {
                    padding-bottom: 150px;
                    .services__item__img-wrapper {
                        height: 167px;
                    }
                }
            }
            &._2 {
                .services__item__inner {
                    padding-bottom: 160px;
                    .services__item__img-wrapper {
                        height: 159px;
                    }
                }
            }
            &._3 {
                .services__item__inner {
                    padding-bottom: 179px;
                    .services__item__img-wrapper {
                        height: 172px;
                        right: $container-padding-sm;
                    }
                }
            }
            &._4 {
                .services__item__inner {
                    padding-bottom: 190px;
                    .services__item__img-wrapper {
                        height: 178px;
                    }
                }
            }
        }
    }
}*/
@media (min-width: 768px) {
  .services .services__item {
    margin-bottom: 28px;
    /*            &._seller {
                .services__item__footer {
                    .btn {
                        display: inline-block;
                        width: auto;
                    }
                }
            }
            &._1 {
                .services__item__content {
                    width: 466px;
                }
                .services__item__img-wrapper {
                    right: 18px;
                    height: 226px;
                }
            }
            &._2 {
                .services__item__content {
                    width: 345px;
                }
                .services__item__img-wrapper {
                    height: 235px;
                }
            }
            &._3 {
                .services__item__content {
                    .rte {
                        width: 350px;
                    }
                }
                .services__item__img-wrapper {
                    height: 220px;
                    right: 8.5px;
                }
            }
            &._4 {
                .services__item__content {
                    .rte {
                        width: 350px;
                    }
                }
                .services__item__img-wrapper {
                    height: 220px;
                }
            }*/ }
    .services .services__item .services__item__content .rte {
      width: 460px; }
    .services .services__item .services__item__img-wrapper {
      height: 226px; }
    .services .services__item .services__item__footer .btn {
      display: inline-block;
      width: auto; }
  .services .services__item__inner {
    min-height: 247px;
    padding: 25px 30px;
    font-size: 15px;
    display: flex;
    flex-direction: column; }
    .services .services__item__inner .services__item__content {
      flex: 1; }
    .services .services__item__inner .services__item__h {
      font-size: 21px;
      margin-bottom: 29px; } }

@media (min-width: 1280px) {
  .services {
    display: flex;
    flex-wrap: wrap;
    margin-left: -14px;
    margin-right: -14px; }
    .services .services__item {
      flex: 0 0 50%;
      width: 50%;
      padding-right: 14px;
      padding-left: 14px;
      margin-bottom: 0;
      display: flex;
      /*            &._1 {
                .services__item__img-wrapper {
                    right: 30px;
                }
            }
            &._2 {
                .services__item__content {
                    width: 245px;
                }
            }
            &._3 {
                .services__item__img-wrapper {
                    height: 200px
                }
            }
            &._4 {
                .services__item__content {
                    .rte {
                        width: 310px;
                    }
                }
                .services__item__img-wrapper {
                    height: 200px;
                }
            }*/ }
      .services .services__item .services__item__inner {
        flex: 1; }
      .services .services__item .services__item__content .rte {
        width: 320px; } }

.section.seller {
  overflow: hidden;
  margin-top: -15px;
  background-image: linear-gradient(24deg, #7faed8, #4585be); }
  @media (min-width: 768px) {
    .section.seller {
      margin-top: -25px;
      background-image: linear-gradient(54deg, #7faed8, #4585be); } }
  @media (min-width: 1280px) {
    .section.seller {
      margin-top: -30px;
      background-image: linear-gradient(78deg, #7faed8, #4585be); } }
  .section.seller .container {
    position: relative; }
    @media (min-width: 320px) and (max-width: 767.98px) {
      .section.seller .container {
        padding-bottom: 270px; } }
  @media (min-width: 1280px) {
    .section.seller .section__h {
      font-size: 45px; } }
  .section.seller .section__lead {
    opacity: 1; }
  .section.seller .seller__feat {
    list-style-type: none;
    padding-left: 0;
    margin-bottom: 0; }
    @media (min-width: 768px) {
      .section.seller .seller__feat {
        width: 40%; } }
    @media (min-width: 1280px) {
      .section.seller .seller__feat {
        width: 55%;
        column-count: 2;
        column-gap: 30px; } }
    .section.seller .seller__feat li {
      margin-bottom: 27px; }
      @media (min-width: 768px) {
        .section.seller .seller__feat li {
          margin-bottom: 42px; } }
      .section.seller .seller__feat li:last-of-type {
        margin-bottom: 0; }
    .section.seller .seller__feat .seller__feat__item {
      display: inline-flex;
      align-items: center;
      color: #fff;
      transition: opacity 0.2s ease-in-out;
      font-size: 16px; }
      @media (min-width: 768px) {
        .section.seller .seller__feat .seller__feat__item {
          font-size: 18px; } }
      .section.seller .seller__feat .seller__feat__item:after {
        content: none; }
      .section.seller .seller__feat .seller__feat__item .sprite {
        margin-right: 20px; }
        @media (min-width: 320px) and (max-width: 767.98px) {
          .section.seller .seller__feat .seller__feat__item .sprite {
            width: 40px; }
            .section.seller .seller__feat .seller__feat__item .sprite:before {
              transform: scale(0.8);
              transform-origin: left; } }
      .section.seller .seller__feat .seller__feat__item span span {
        white-space: nowrap;
        position: relative; }
    .section.seller .seller__feat a.seller__feat__item:hover {
      opacity: .8; }
    .section.seller .seller__feat a.seller__feat__item span span:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: -2px;
      width: 100%;
      height: 1px;
      background: url(img/link-inverse.png) repeat-x; }
  .section.seller .seller__img-wrapper {
    height: 310px;
    position: absolute;
    bottom: -50px;
    right: -100px; }
    @media (min-width: 768px) {
      .section.seller .seller__img-wrapper {
        height: 450px;
        bottom: -40px;
        right: -60px; } }
    @media (min-width: 1280px) {
      .section.seller .seller__img-wrapper {
        bottom: -140px; } }
    .section.seller .seller__img-wrapper img {
      height: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
